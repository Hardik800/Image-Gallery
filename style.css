* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background-color: #121212;
  color: #fff;
  padding: 20px;
}

.header {
  text-align: center;
  margin-bottom: 20px;
}

.button {
  justify-content: center;
  align-items: center;
  display: flex;
  gap: 1rem;
}

.btn {
  cursor: pointer;
  font-size: 1.2rem;
  width: 20rem;
  background-color: rgb(37, 1, 71);
  color: white;
  margin: 20px;
  padding: 0.3rem;
  border: 2px solid wheat;
  border-radius: 6px;
  transition: all 0.3s ease;
}

.btn:hover {
  background-color: rgb(3, 0, 5);
  transform: scale(1.04);
}

.image-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 20px;
}

.gallery-item img {
  width: 100%;
  height: 200px; /* Set fixed height*/
  object-fit: cover; /*Crop to fit*/
  display: block;
  border-radius: 8px;
  transition: all 0.3s ease;
  cursor: pointer;
}

.gallery-item img:hover {
  transform: scale(1.05);
  box-shadow: 0 10px 20px blueviolet;
}



.header h1 {
  font-size: 2.5rem;
  margin-bottom: 1rem;
}

/* Make header and buttons responsive */
@media (max-width: 768px) {
  .header h1 {
    font-size: 1.8rem;
  }

  .button {
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .btn {
    width: 100%;
    max-width: 300px;
    font-size: 1rem;
    padding: 0.6rem 1rem;
  }
}

@media (max-width: 480px) {
  .header h1 {
    font-size: 1.5rem;
  }

  .btn {
    font-size: 0.9rem;
    padding: 0.5rem;
  }
}


/* lightbox css */

.lightbox{
  display: none;
  position: fixed;
  z-index: 999;
  top: 0; left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.9);
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.lightbox-img {
  max-width: 90%;
  max-height: 80%;
  border-radius: 8px;
  margin-bottom: 1rem;
  
}

.lightbox-controls button{
  background: none;
  color: white;
  border: none;
  font-size: 2rem;
  cursor: pointer;
  padding: 10px;
  
}

.close{
  position: absolute;
  top: 20px;
  right: 30px;
  font-size: 2rem;
  color: white;
  cursor: pointer;
}
